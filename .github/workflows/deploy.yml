name: Test and deploy

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      # - name: Run all test cases
      #   run: npm run test
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: hoanghy/e-tour:latest
          build-args: |
            NODE_ENV=${{ secrets.NODE_ENV }}
            PORT=${{ secrets.PORT }}
            CORS_URL=${{ secrets.CORS_URL }}
            LOG_DIR=${{ secrets.LOG_DIR }}
            MONGO_URL=${{ secrets.MONGO_URL }}
            TZ=${{ secrets.TZ }}
            DB_MIN_POOL_SIZE=${{ secrets.DB_MIN_POOL_SIZE }}
            DB_MAX_POOL_SIZE=${{ secrets.DB_MAX_POOL_SIZE }}
            ACCESS_TOKEN_VALIDITY_SEC=${{ secrets.ACCESS_TOKEN_VALIDITY_SEC }}
            REFRESH_TOKEN_VALIDITY_SEC=${{ secrets.REFRESH_TOKEN_VALIDITY_SEC }}
            TOKEN_ISSUER=${{ secrets.TOKEN_ISSUER }}
            TOKEN_AUDIENCE=${{ secrets.TOKEN_AUDIENCE }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}
